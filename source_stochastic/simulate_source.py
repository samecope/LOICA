import sbol3
from sbol_utilities import component
import flapjack as fj
from flapjack import *
import loica as lc
import getpass
from loica import *
import matplotlib.pyplot as plt
import numpy as np


user = input()
passwd = getpass.getpass()
flap = fj.flapjack.Flapjack('flapjack.rudge-lab.org:8000')
flap.log_in(username=user, password=passwd)

# change study name and description for different simulations
study = flap.create('study', name='SC loica source rate 100, deg rate 1', description='SC study for demonstrating source rate 100, deg rate 1')
dna = flap.get('dna', name='source')
vector = flap.get('vector', name='source', dnas=dna.id)
gfp = flap.get('signal', name='GFP', color='green', description='fluorescent')

network = GeneticNetwork(vector=vector.id[0])
# reporter degradation rate can be changed here
reporter = Reporter(name='GFP', color='green', degradation_rate=1, init_concentration=0, signal_id=gfp.id[0])
network.add_reporter(reporter)

# source rate can be changed here
source = Source(output=reporter, rate=100)
network.add_operator(source)

def growth_rate(t):
    return 0

def biomass(t):
    return 1

metab = SimulatedMetabolism("SC_source_metab", biomass, growth_rate)

media = flap.get('media', name='loica', description='Simulated loica media')
strain = flap.get('strain', name='loica', description='Loica test strain')

samples = []
# Create 5 replicate samples for simulation
for _ in range(1):
    sample = Sample(genetic_network=network, 
                    metabolism=metab,
                    media=media.id[0],
                    strain=strain.id[0])
    samples.append(sample)
    
assay = Assay(samples,
              n_measurements=1000,
              interval=1/60,
              name='Loica constitutive expression (noise), rate 100 interval 1/60',
              description='Simulated constitutive gene generated by loica',
             )
assay.run(stochastic=True)

m = assay.measurements
fig,ax = plt.subplots(1,1)
m[m.Signal=='GFP'].plot(x='Time', y='Measurement', style='.', ax=ax)

assay.upload(flap, study=study.id[0])